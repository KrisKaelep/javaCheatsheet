template(name="projekt")
	.projekt.panel.panel-info
		h2.panel-heading#projekt Projekt
		.panel-body
			p Projekt on kõige tähtsam asi selle aine juures. Projekt on see, millega peaksid koguaeg tegelema, nii kodus kui tööl (okei, tööl keskendu töö peale). Miks me seda teeme? Sest enda idee kallal nokitsemine on kõige efektiivsem viis programmeerimine ära õppida.

			h2#projekt-idee Idee

			p Et ikka põnev oleks saad päris oma programmi kirjutada. Ära idee leidmise pärast liialt vaeva näe. Kui endal pähe ei tule siis leia mõni olemasolev programm ja matki see järgi. Võib teha ka mängu.

			h2#projekt-keerukus Keerukus

			p Point on ennast proovile panna. Siis on huvitav ja siis õpib. Ma ei mõtle, et peaksid nüüd päeva pealt proffiks hakkama, aga võta ikka mõnuga. Siin tuleb täheldada seda, et kui teed lihtsa idee ära, siis seda saab alati keerulisemaks täiendada - lihtne on hea. Ühtlasi peaks keerulisele programmile lähenema tema kõige lihtsamast küljest ja siis vaikselt täiendama - keeruline on ka hea. Lühidalt võta mingi idee ja hakka pihta!

			h2#projekt-maht Maht

			p Projekti mahtu on väga raske hinnata. Asi on selles, et kui algaja kirjutab 1000 rida koodi probleemi lahendamiseks, siis edasijõudnud teeb sama asja 100 reaga ära. See ei ole kirjand ja koodi koguse järgi projekti kvaliteeti hinnata ei saa. Küll aga annab hindamise kriteerium sulle aimu, milliseid tehnilisi lahendusi tähele pannakse hindamisel.

			h2#projekt-aga-nuub Aga ma ei oska ju progeda!
			p Kõik on hästi. Kui sa kujundad oma programmi paberil ära, mõtled läbi mis funktsionaalsus sinna tuleb on juba esimene samm olemas. Nüüd. Kui sul on i200 videod vaadatud, äkki isegi codecademy.com mõni Pythoni kursus tehtud, siis peaksid oskama Javas kõige lihtsamaid manöövreid teha: arvutada, kasutajalt sisendit küsida, tulemus välja printida. Kas sinu (ükskõik kui keerulist) programmi annab konsoolis ära teha mingil elementaarsel tasemel? Ehk tee kõige lihtsam variant kohe ära. Kui midagi juurde õpid saad täiendada ja kindlasti ära karda nullist uuesti kirjutamist, see arendambi tegelikult kõige rohkem.

			h2#projekt-vastamine Vastamine
			p Nagu iga õige projekt (näiteks lõputöö) tuleb projekt kaitsta kõigi ees. Kusjuures, teised ruumis olevad tudengid saavad ka hinnet mõjutada - hindamise kriteeriumis seda kirjas pole, aga õppejõud kindlasti arvestab üldsuse seisukohta. Vastamise päevaks on kõikide tudengite kood auditooriumi arvutis olemas (git) keerulisema setupi korral võid oma arvutiga vastama tulla. Asi võiks välja näha umbes selliselt:
			ul
				li Sisse andmine
					ul
						li Töö peab olema mõnes giti repositooriumis, kust õppejõud saab ligipääsu.
				li Projekti vastamisel on tudeng klassi ees.
					ul
						li Esitab tulemuse (mitte koodi) [2min]
						li Selgitab üht probleemilahendust koodis, mille üle ta on eriti uhke [2min]
						li Õppejõu tagasiside [1min]
						li Auditooriumi hääletus [tagasiside ajal]
				li Hindamine
					ul
						li Hindamine toimub kohapeal.
						li Õppejõud määrab lõpliku hinde vastavalt hindamise kriteeriumile.
						li Auditooriumis olevatel tudengitel on võimalik nutihääletuse abil tugevasti mõjutada hinnet.

			.panel
				h2.panel-heading#projekt-hindamine Hindamise kriteerium
				.panel-body
					p Nonii. "Ükskõik kui keeruline või lihtne" on tore, aga mille eest reaalselt hinde saab? Siin on siis täpne hindamise kriteerium. <b style="color:red">Punases</b> on kõige tähtsamad punktid, <b>Boldis</b> tähtis ja ülejäänud tavatekstis. 
					
					p <b>NB!</b> Giti kasutamine on hädavajalik, et oma tööd üldse esitada saaks (ja et kood töötaks kooli arvutis). Aga objekt-orienteerituse ja GUI kasutamine tegelikult hädavajalik ei ole, see on pigem nagu pidepunkt, millega kontrollida, kas programm on optimaalselt üles ehitatud ja piisavalt keeruline, et head hinnet saada.

					h2#projekt-hindamine-Kood Kood

					ul
						li <b style="color:red">Kood on gitis</b>, õppejõud saab ligi.
						li Projekti kirjeldus failis README.md (.md on <a target="_blank" href="http://eherrera.net/markdowntutorial">markdown</a>)
							ul
								li <b>Nimi</b>
								li Projekti kirjeldus
								li Kasutusjuhend
								li Muud märkmed
						li <b style="color:red">Võõras kood on allikale viidatud</b>
						li Lihtne lugeda
							ul
								li <b>treppimine</b> on paigas
								li <b>muutuja nimetused</b> kirjeldavad protsessi olemust
								li <b>meetodide nimetused</b> kirjeldavad selgelt meetodi toimingut
								li selguse tagamiseks on koodi <b>kommenteeritud</b>
						li Loogiline ja taaskasutatav ülesehitus
							ul
								li <b>kasutab meetode</b> kus vaja
								li <b>kasutab klasse</b> kus vaja
								li <b style="color:red">kasutab objekt-orienteeritust</b>
								li kasutatakse <b>otstarbekalt tsükleid</b>
								li kasutatakse andmestruktuure ja käideldakse neid otstarbekalt
						li Kood on kompaktne (lisapunktid, kui on näha erilist läbimõeldust)
							ul
								li keerulised tsüklid
								li rekursioon
								li eriti hea klasside/meetodide taaskasutatavus

					h2#projekt-hindamine-Tulemus Tulemus

					ul
						li funktsionaalsus
							ul
								li <b>programm täidab oma eesmärki</b>, ehk suudab ettenähtud protsessi lõpuni viia
						li kasutatavus
							ul
								li <b style="color:red">GUI olemasolu</b> (v.a. juhul kui sellest pole üldse kasu)
								li <b>bugid ei takista protsessi</b>
								li kasutajaliides on läbi mõeldud
								li kasutaja ei pea üleliigseid klikke tegema
								li kasutajal on lihtne mõista, kuidas programmi kasutada.
						li <b>Programm on vastupidav</b>
							ul
								li Tavakasutajale
								li Dumbuserile
								li Algaja-häkkerile

					h2#projekt-hindamine-Lisapunkte Lisapunkte

					ul
						li <b>Tudeng on läinud aine raamistikust edasi</b>, ehk oskab rohkem kui on aines õpetatud.
						li Tudeng on reaalselt <b>gitti kasutanud</b> (committide periood on loogiline)
						li Kasutatud on <b>lisa raamistikke</b>, näiteks SQL andmebaas.
						li Kui tudeng tööga päris valmis ei saanud, kas ta vähemalt teab mida järgmiseks peaks tegema?

					h2#projekt-hindamine-Plagiaadikontroll Plagiaadikontroll

					p (Rakendada ainult kui väga vaja, eksam on lõplik filter)

					ul
						li Oskab selgitada suvalist kohta koodis.
						li Oskab programmi käiku muuta, kui õppejõud seda palub.
						li Oskab käigu pealt tsükleid valmistada.
