template(name="juhtimisstruktuurid")
	h1#Juhtimisstruktuurid Juhtimisstruktuurid
	p Juhtimisstruktuurid on programmeerija põhilised tööriistad, nagu ehitajal on haamer ja kruvikeeraja. Siin käsitleme kahte liiki: "kui" ja "kuni", ehk "kui" tingimus on täidetud käitu sedasi ja "kuni" tingimus on täidetud käitu sedasi. Muud neil vahet polegi, kui ühed juhivad programmi kulgemist vaid ühe korra ja teised panevad ühe koodi jupi tsükliliselt kordama.
	p "Kui" tüüpi <strong>valikud</strong> on <code>if</code>, <code>switch</code> ja <code>try-catch</code>. "Kuni" tüüpi <strong>tsüklid</strong> on <code>while</code>, <code>or</code>, <code>foreach</code> ja <code>do..while</code>.
	h2#Valikud Valikud
	.panel.panel-info
		h3#if.panel-heading.bold if
		.panel-body
			.row
				.col-sm-3 Point
				.col-sm-9 Teha programmis lihtsaid valikuid (==, !=, &lt;=, &gt;=, string.equals())
			.row
				.col-sm-3 Näite ülesanne
				.col-sm-9 Kui punkte on 50 või rohkem, saab tudeng ainest läbi. Kui on vähem, siis ei saa.
			.row
				.col-sm-3 Lahendus koodis
				.col-sm-9
					pre
						code
							| int punkte = 55;
							| if (punkte &gt;= 50) {
							|     System.out.println("tudeng sai ainest läbi");
							| } else {
							|     System.out.println("tudeng ei saanud ainest läbi");
							| }

	.panel.panel-info
		h3#switch.panel-heading switch
		.panel-body
			.row
				.col-sm-3 Point
				.col-sm-9 Teha paljude variantidega, aga lihtsama tingimusega (ainult ==), valikuid.
			.row
				.col-sm-3 Näite ülesanne
				.col-sm-9 Järgmise aasta ilmateade: kui on suvi, paistab päike; kui on talv, sajab lund, kevadel ja sügisel sajab vihma.
			.row
				.col-sm-3 Lahendus koodis
				.col-sm-9
					pre
						code
							| String aastaaeg = "kevad";
							| switch (aastaaeg) {
							|     case "talv":
							|         System.out.println("Sajab lund");
							|         break;
							|     case "suvi":
							|         System.out.println("Päike");
							|         break;
							|     case "kevad": // kevade ja sügise tulemus on sama
							|     case "sügis":
							|         System.out.println("Sajab vihma");
							|         break;
							| }

	.panel.panel-info
		h3#try-catch.panel-heading try-catch
		.panel-body
			.row
				.col-sm-3 Point
				.col-sm-9 Try-catch on nagu if-else, ainult, et on mõeldud veaohtlike koodijuppidele.
			.row
				.col-sm-3 Näite ülesanne
				.col-sm-9 Loe kõvakettalt fail üles, kui millegipärast toiming ebaõnnestub, anna sellest teada.
			.row
				.col-sm-3 Lahendus koodis
				.col-sm-9 
					pre
						code
							| BufferedReader br;
							| try {
							|     br = new BufferedReader(new FileReader("file.txt"));
							| } catch (FileNotFoundException e) {
							|     System.out.println("Faili ei loetud, sest:");
							|     e.printStackTrace(); // prindib detailse errori
							| }

	h2#Tsyklid Tsüklid
	p Kui programmil on vaja nüüd mitte lihtsalt hargneda (otsus langetada) vaid ühte koodijuppi käiata kümneid või isegi tuhandeid kordi, siis on tsüklid selle jaoks. While tsükkel on selles mõttes universaalne, et sellega saab kõike teha, mida teistegagi. Teiste tsüklite mõte on lihtsustada kindlaid igapäevaseid toiminguid. Näiteks kui sul on vaja just numbritega mängida, siis saad for tsükliga kiiremini asja tehtud. Kui soovid massiivi väärtustega tegeleda, on foreach ideaalne.
	.panel.panel-info
		h3#while.panel-heading.bold while
		.panel-body
			.row
				.col-sm-3 Point
				.col-sm-9 Korrata koodi kuni tingimus on tõene
			.row
				.col-sm-3 Ül1: prindi numbrite jada 1-10
				.col-sm-9 
					pre
						code
							| int count = 0;
							| while (count &lt; 10) {
							|     System.out.println(count + 1);
							|     count = count + 1;
							| }
			.row
				.col-sm-3 
					p Prindi välja väärtused massiivist
					pre
						code
							| String[] m = {
							|     "olen",
							|     "lihtne",
							|     "ülesanne"
							| };
				.col-sm-9 
					pre
						code
							| int count = 0;
							| while (count &lt; m.length) {
							|     System.out.println(m[count]);
							|     count = count + 1;
							| }
	.panel.panel-info
		h3#do-while.panel-heading do..while
		.panel-body
			.row
				.col-sm-3 Point
				.col-sm-9 Identne while tsükliga, aga käiatakse vähemalt ühe korra, sest tingimuse kontrollimine toimub lõpus.
			.row
				.col-sm-3 Ül1: prindi numbrite jada 1-10
				.col-sm-9 
					pre
						code
							| int count = 0;
							| do {
							|     System.out.println(count + 1);
							|     count = count + 1;
							| } while (count &lt; 10);
			.row
				.col-sm-3 
					p Prindi välja väärtused massiivist
					pre
						code
							| String[] m = {
							|     "olen",
							|     "lihtne",
							|     "ülesanne"
							| };
				.col-sm-9 
					pre
						code
							| int count = 0;
							| do {
							|     System.out.println(m[count]);
							|     count = count + 1;
							| } while (count &lt; m.length);
	.panel.panel-info
		h3#for.panel-heading for
		.panel-body
			.row
				.col-sm-3 Point
				.col-sm-9 Korrata koodi x arv kordi
			.row
				.col-sm-3 Ül1: prindi numbrite jada 1-10
				.col-sm-9 
					pre
						code
							| for (int i = 0; i &lt; 10; i++) {
							|     System.out.println(i + 1);
							| }
			.row
				.col-sm-3 
					p Prindi välja väärtused massiivist
					pre
						code
							| String[] m = {
							|     "olen",
							|     "lihtne",
							|     "ülesanne"
							| };
				.col-sm-9 
					pre
						code
							| for (int i = 0; i &lt; m.length; i++) {
							|     System.out.println(m[i]);
							| }
	.panel.panel-info
		h3#foreach.panel-heading foreach
		.panel-body
			.row
				.col-sm-3 Point
				.col-sm-9 Käia tsükliga läbi mõni andmete kogum (nt. massiiv)
			.row
				.col-sm-3 
					p Prindi välja väärtused massiivist
					pre
						code
							| String[] m = {
							|     "olen",
							|     "lihtne",
							|     "ülesanne"
							| };
				.col-sm-9 
					pre
						code
							| for (String s : m) {
							|     System.out.println(s);
							| }